#!/bin/bash

# If no argument is provided, read URL from clipboard
if [ "$#" -eq 0 ]; then
  notify-send "mpv" "Starting mpv with path from clipboard..."
  URL="$(xclip -selection clipboard -o)"
else
  notify-send "mpv" "Starting mpv with command argument..."
  URL="$@"
fi

# Start mpv and record its PID
mpv --save-position-on-quit "$URL" --quiet > /dev/null &
PID=$!

hidden=false

# Start an infinite while loop to run while mpv is still running
while true; do
  sleep 0.2
  if kill -0 $PID; then # check mpv is still running
    if xdotool search --pid $PID; then # check when mpv has an open window
      if xdotool windowfocus $(xdotool search --pid $PID); then # focus the open window and run several tasks
        NID=$(xdotool search --pid $PID)

        bspc node "$NID" -t floating
        bspc node "$NID" -g sticky
        ~/.config/bspwm/mpv/move bottom right -b 16 -s 3

        bspc subscribe desktop_focus |
          while read -r line; do

            if [[ $line = *"0x00200007"* ]]; then
              # Save the last hidden state before changing it on workspace 5
              if [[ -n $(bspc query -N -n "$NID".hidden) ]]; then
                hidden=true
              else
                hidden=false
              fi

              # The node is always in fullscreen on workspace 5
              bspc node "$NID" -g hidden=false -t fullscreen -f
            else
              if [[ -n $(bspc query -N -n "$NID".hidden.floating) ]]; then
                hidden=true
              fi

              if [[ -n $(bspc query -N -n "$NID".floating) ]]; then
                hidden=false
              fi

              # If the node was hidden before, return it to its previous state
              if $hidden; then
                bspc node "$NID" -g hidden=true -t floating
              else
                bspc node "$NID" -t floating
              fi
            fi
          done
      fi
    fi
  else
    notify-send "mpv" "Invalid link or file path. Please try again."
    exit 1
  fi
done

